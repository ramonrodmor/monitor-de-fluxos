/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gerencia.pkg1.pkg0;

import java.io.IOException;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author ramon
 */
public class tela extends javax.swing.JFrame {

    private static ProdutoTableModel model;
    private static int contagem;

    /**
     * Creates new form tela
     */
    public tela() {
        initComponents();
        contagem = 0;

        //cria a lista com os produtos
        ArrayList<Fluxo> lista = new ArrayList<Fluxo>();

        //cria o modelo de Fluxo
        model = new ProdutoTableModel(lista);

        //atribui o modelo Ã  tabela
        tableFlows.setModel(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPaneTable = new javax.swing.JScrollPane();
        tableFlows = new javax.swing.JTable();
        buttonCapture = new javax.swing.JButton();
        buttonDelete = new javax.swing.JButton();
        buttonClear = new javax.swing.JButton();
        buttonSort = new javax.swing.JButton();
        jScrollPaneLog = new javax.swing.JScrollPane();
        log = new javax.swing.JTextArea();
        buttonClearLog = new javax.swing.JButton();
        buttonDetails = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("MONITORS");

        jPanel1.setPreferredSize(new java.awt.Dimension(600, 410));

        jScrollPaneTable.setPreferredSize(new java.awt.Dimension(450, 400));

        tableFlows.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "PROTOCOL", "FLOW", "IP SRC", "PORT SRC", "IP DST", "PORT DST"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPaneTable.setViewportView(tableFlows);

        buttonCapture.setText("Include Monitor");
        buttonCapture.setMaximumSize(new java.awt.Dimension(150, 30));
        buttonCapture.setMinimumSize(new java.awt.Dimension(150, 30));
        buttonCapture.setPreferredSize(new java.awt.Dimension(150, 30));
        buttonCapture.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCaptureActionPerformed(evt);
            }
        });

        buttonDelete.setText("Remove Monitor");
        buttonDelete.setMaximumSize(new java.awt.Dimension(150, 30));
        buttonDelete.setMinimumSize(new java.awt.Dimension(150, 30));
        buttonDelete.setPreferredSize(new java.awt.Dimension(150, 30));
        buttonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDeleteActionPerformed(evt);
            }
        });

        buttonClear.setText("Delete Entry");
        buttonClear.setMaximumSize(new java.awt.Dimension(150, 30));
        buttonClear.setMinimumSize(new java.awt.Dimension(150, 30));
        buttonClear.setPreferredSize(new java.awt.Dimension(150, 30));
        buttonClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonClearActionPerformed(evt);
            }
        });

        buttonSort.setText("Sort");
        buttonSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSortActionPerformed(evt);
            }
        });

        log.setEditable(false);
        log.setColumns(20);
        log.setRows(5);
        log.setText("Log:");
        jScrollPaneLog.setViewportView(log);

        buttonClearLog.setText("Clear Log");
        buttonClearLog.setMaximumSize(new java.awt.Dimension(150, 30));
        buttonClearLog.setMinimumSize(new java.awt.Dimension(150, 30));
        buttonClearLog.setPreferredSize(new java.awt.Dimension(150, 30));
        buttonClearLog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonClearLogActionPerformed(evt);
            }
        });

        buttonDetails.setText("Flow Details");
        buttonDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDetailsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPaneLog, javax.swing.GroupLayout.PREFERRED_SIZE, 590, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jScrollPaneTable, javax.swing.GroupLayout.PREFERRED_SIZE, 590, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(buttonCapture, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(buttonDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(buttonSort, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buttonClearLog, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonClear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPaneTable, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPaneLog, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonCapture, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonDelete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonClearLog, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonSort)
                    .addComponent(buttonDetails)
                    .addComponent(buttonClear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 590, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonClearLogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonClearLogActionPerformed
        // TODO add your handling code here:
        log.setText("Log:");
    }//GEN-LAST:event_buttonClearLogActionPerformed

    private void buttonSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSortActionPerformed
        // TODO add your handling code here:
        model.ordenarPorNome();
    }//GEN-LAST:event_buttonSortActionPerformed

    private void buttonClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonClearActionPerformed
        // TODO add your handling code here:
        int selecionados[] = tableFlows.getSelectedRows();
        if (selecionados.length > 0) {
            ArrayList<Fluxo> seraoExcluidos = new ArrayList<Fluxo>();

            for (int i = 0; i < selecionados.length; i++) {
                seraoExcluidos.add(model.getCliente(selecionados[i]));
            }

            for (Fluxo p : seraoExcluidos) {
                model.excluir(p);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Choose at least one entry.", "Deletion", 2);
        }
    }//GEN-LAST:event_buttonClearActionPerformed

    private void buttonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDeleteActionPerformed
        // TODO add your handling code here:
        Object[] opcoes = {"http", "ftp", "smtp"};
        Object res = JOptionPane.showInputDialog(null, "Choose the protocol", "Selection of Protocols",
            JOptionPane.PLAIN_MESSAGE, null, opcoes, "");
        cliente c1 = new cliente();
        if (res == null) {
            System.out.println("cancelado");
        } else if (res.toString().equalsIgnoreCase("http")) {
            try {
                log.append("\nRemoving monitor " + res + ": ");
                c1.DELETE("http://localhost:8080/monitors/http");
            } catch (IOException ex) {
                Logger.getLogger(tela.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (res.toString().equalsIgnoreCase("ftp")) {
            try {
                log.append("\nRemoving monitor " + res + ": ");
                c1.DELETE("http://localhost:8080/monitors/ftp");
            } catch (IOException ex) {
                Logger.getLogger(tela.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (res.toString().equalsIgnoreCase("smtp")) {
            try {
                log.append("\nRemoving monitor " + res + ": ");
                c1.DELETE("http://localhost:8080/monitors/smtp");
            } catch (IOException ex) {
                Logger.getLogger(tela.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (res == null) {
            System.out.println("Cancelado");
        }
    }//GEN-LAST:event_buttonDeleteActionPerformed

    private void buttonCaptureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCaptureActionPerformed
        // TODO add your handling code here:
        Object[] opcoes = {"http", "ftp", "smtp"};
        Object res = JOptionPane.showInputDialog(null, "Choose the protocol", "Selection of Protocols",
            JOptionPane.PLAIN_MESSAGE, null, opcoes, "");
        cliente c1 = new cliente();
        if (res == null) {
            System.out.println("cancelado");
        } else if (res.toString().equalsIgnoreCase("http")) {
            try {
                log.append("\nIncluding monitor " + res + ": ");
                c1.POST("http://localhost:8080/monitors/http");
            } catch (IOException ex) {
                Logger.getLogger(tela.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (res.toString().equalsIgnoreCase("ftp")) {
            try {
                log.append("\nIncluding monitor " + res + ": ");
                c1.POST("http://localhost:8080/monitors/ftp");
            } catch (IOException ex) {
                Logger.getLogger(tela.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (res.toString().equalsIgnoreCase("smtp")) {
            try {
                log.append("\nIncluding monitor " + res + ": ");
                c1.POST("http://localhost:8080/monitors/smtp");
            } catch (IOException ex) {
                Logger.getLogger(tela.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (res == null) {
            System.out.println("Cancelado");
        }
    }//GEN-LAST:event_buttonCaptureActionPerformed

    private void buttonDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDetailsActionPerformed
        // TODO add your handling code here:
        int selecionados[] = tableFlows.getSelectedRows();
        if (selecionados.length > 0 && selecionados.length < 2) {
            Fluxo det = new Fluxo();
            det = model.getCliente(selecionados[0]);
            JOptionPane.showMessageDialog(this, Fluxo.detalhesFluxo(det), "Flow details", 1);
        } else if (selecionados.length < 1) {
            JOptionPane.showMessageDialog(this, "Choose an entry!", "Selection", 2);
        } else {
            JOptionPane.showMessageDialog(this, "Choose only one entry!", "Selection", 2);
        }
    }//GEN-LAST:event_buttonDetailsActionPerformed

    public static void inserirFluxo(Fluxo f) {
        model.inserir(f);
        contagem++;
    }

    /*
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new tela().setVisible(true);
                servidor serv = new servidor();
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonCapture;
    private javax.swing.JButton buttonClear;
    private javax.swing.JButton buttonClearLog;
    private javax.swing.JButton buttonDelete;
    private javax.swing.JButton buttonDetails;
    private javax.swing.JButton buttonSort;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPaneLog;
    private javax.swing.JScrollPane jScrollPaneTable;
    public static javax.swing.JTextArea log;
    private javax.swing.JTable tableFlows;
    // End of variables declaration//GEN-END:variables
}
